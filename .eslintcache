[{"C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\ListaContas.js":"1","C:\\Users\\Matheus\\Desktop\\erp\\src\\screens\\Contas.js":"2","C:\\Users\\Matheus\\Desktop\\erp\\src\\index.js":"3","C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\Lancarconta.js":"4","C:\\Users\\Matheus\\Desktop\\erp\\src\\redux\\store.js":"5","C:\\Users\\Matheus\\Desktop\\erp\\src\\redux\\reducers\\ContasReducer.js":"6","C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\EditCount.js":"7","C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\MyModal.js":"8","C:\\Users\\Matheus\\Desktop\\erp\\src\\screens\\Routers.js":"9"},{"size":2789,"mtime":1617113215604,"results":"10","hashOfConfig":"11"},{"size":712,"mtime":1616861918603,"results":"12","hashOfConfig":"11"},{"size":325,"mtime":1616861842321,"results":"13","hashOfConfig":"11"},{"size":7160,"mtime":1617113803678,"results":"14","hashOfConfig":"11"},{"size":193,"mtime":1616849127753,"results":"15","hashOfConfig":"11"},{"size":1875,"mtime":1617115069088,"results":"16","hashOfConfig":"11"},{"size":6810,"mtime":1616693245843,"results":"17","hashOfConfig":"11"},{"size":1177,"mtime":1616700503922,"results":"18","hashOfConfig":"11"},{"size":320,"mtime":1616517688309,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o8v9xg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\ListaContas.js",["42","43","44","45","46","47","48","49","50"],"C:\\Users\\Matheus\\Desktop\\erp\\src\\screens\\Contas.js",["51","52","53","54","55"],"import { te } from 'date-fns/locale'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport LancarConta from '../componentes/Lancarconta'\r\nimport ListaContas from '../componentes/ListaContas'\r\nimport {useDispatch} from 'react-redux'\r\nimport './Contas.css'\r\n\r\nfunction Contas(){\r\n    const [DataFilto, setDataFiltro] = useState( new Date())\r\n    return(\r\n        <Container fluid = \"md\">\r\n            <Row>\r\n                <Col xs = {5}>\r\n                    <LancarConta />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <ListaContas/> \r\n            </Row>\r\n        </Container>\r\n    )    \r\n}\r\nexport default Contas;\r\n",["56","57"],"C:\\Users\\Matheus\\Desktop\\erp\\src\\index.js",[],"C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\Lancarconta.js",["58","59","60","61","62","63"],"C:\\Users\\Matheus\\Desktop\\erp\\src\\redux\\store.js",[],"C:\\Users\\Matheus\\Desktop\\erp\\src\\redux\\reducers\\ContasReducer.js",["64","65","66","67","68","69"],"C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\EditCount.js",["70","71","72","73","74","75","76","77","78","79"],"import React from 'react'\r\nimport {useState} from 'react'\r\nimport { Container, Form, Row, Col,  Button, ButtonToolbar } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {format} from 'date-fns'\r\nimport NumberFormat from 'react-number-format'\r\nimport {contaEdit} from '../redux/reducers/ContasReducer'\r\nfunction EditCount(props){\r\n    \r\n    const [NomeCliente, setNomeCliente] = useState(props.NomeCliente)\r\n    const Numero = props.ID;\r\n    const [ValorCliente, setValorCliente] = useState(props.ValorCliente)\r\n    const [CpfCliente, setCpfCliente] = useState(props.CpfCliente)\r\n    const [TipoConta, setTipoConta] = useState(props.TipoConta)\r\n    const [TelefoneCliente, setTelefone] = useState(props.TelefoneCliente)\r\n    const [EmailCliente, setEmail] = useState()\r\n    let dataEmissaoString = props.DataEmissao.split(\"/\");\r\n    let data = new Date(dataEmissaoString[2], dataEmissaoString[1]-1, dataEmissaoString[0])\r\n    const [DataEmissao, setDataEmissao] = useState(format(new Date(data), 'yyyy-MM-dd'))\r\n    let dataVencimentoString = props.DataVencimento.split(\"/\")\r\n    let dataVencimento = new Date(dataVencimentoString[2], dataVencimentoString[1]-1, dataVencimentoString[0])\r\n    const [DataVencimento, setDataVencimento] = useState(format(new Date(dataVencimento), 'yyyy-MM-dd'))\r\n    const [Historico, setHistorico] = useState(props.Historico);\r\n    const [Conta, setConta] = useState([]);\r\n    const contas = useSelector((state) => state.contas)\r\n    const Dispatch = useDispatch();\r\n    function Salvar(){\r\n        Dispatch(\r\n            contaEdit({\r\n                ID: Numero,\r\n                Cliente: NomeCliente,\r\n                Valor: ValorCliente,\r\n                DataEmissao: format(new Date(DataEmissao), 'dd/MM/yyyy'),\r\n                DataVencimento: format(new Date(DataVencimento), 'dd/MM/yyyy'),\r\n                Historico: Historico,\r\n                \r\n            })\r\n            \r\n        )\r\n    }\r\n    return(\r\n        <container>\r\n               <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Numero</Form.Label>\r\n                            <Form.Control value = {Numero} disabled = {true}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Tipo</Form.Label>\r\n                            <Form.Control as = 'select'>\r\n                                <option> A pagar </option>\r\n                                <option> A receber</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control value = {NomeCliente} onChange = {e => setNomeCliente(e.target.value)} placeholder = 'Nome do Cliente'>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>CPF</Form.Label>\r\n                            <NumberFormat className = 'form-control' value = {CpfCliente}  format = '###.###.###-##'></NumberFormat>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Telefone</Form.Label>\r\n                            <NumberFormat className = 'form-control' format = '(##)#####-####' value = {TelefoneCliente} type = 'tel' onChange = {e => setTelefone(e.target.value)}></NumberFormat>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                    <Form.Group>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control value = {EmailCliente} onChange = {e => setEmail(e.target.value)}  placeholder = 'Email' type = 'email'></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Valor R$</Form.Label>\r\n                            <NumberFormat \r\n                                thousandSeparator = '.' \r\n                                decimalSeparator = ','\r\n                                thousandsGroupStyle = 'thousand'\r\n                                decimalScale = '2'\r\n                                prefix = 'R$'\r\n                                fixedDecimalScale = {true}\r\n                                value = {ValorCliente} \r\n                                className = 'form-control'\r\n                                onChange = {e => setValorCliente(e.target.value)} \r\n                                placeholder = 'Valor R$' type = 'value'>\r\n\r\n                            </NumberFormat>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label> Data de Emiss√£o</Form.Label>\r\n                            <Form.Control value = {DataEmissao} onChange = { e => setDataEmissao(e.target.value)} type = 'date' value = {DataEmissao}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Data de Vencimento</Form.Label>\r\n                            <Form.Control value = {DataVencimento} onChange = {e => setDataVencimento(e.target.value)} type = 'date' value = {DataVencimento}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>Historico</Form.Label>\r\n                            <Form.Control value = {Historico} onChange = {e => setHistorico(e.target.value)} placeholder = 'Descri√ß√£o..' ></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col style = {{justifyContent:'center', alignItems:'center', display:'flex', margin:'10'}}>\r\n                       <Button onClick = {() => Salvar()}> Salvar</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </container>\r\n\r\n    )\r\n}\r\n\r\nexport default EditCount;","C:\\Users\\Matheus\\Desktop\\erp\\src\\componentes\\MyModal.js",["80","81","82","83","84","85","86"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ModalTitle } from 'react-bootstrap'\r\nimport Modal from 'react-modal'\r\nimport { useSelector } from 'react-redux'\r\nimport ListaContas from './ListaContas'\r\nimport {FormText} from 'react-bootstrap'\r\nimport EditCount from './EditCount'\r\n\r\nconst MyModal = (props) => {\r\n    const [modal, setModal] = useState(props.open)\r\n    const [contaID, setcontaID] = useState(props.contaID)\r\n    const conta = useSelector((state) => state.contas)\r\n    const teste = conta.filter(c => c.ID === contaID)\r\n  \r\n    return(\r\n      \r\n           <Modal\r\n            isOpen = {props.open}\r\n            onRequestClose = {props.CloseModal}\r\n            shouldCloseOnEsc = {false}\r\n            shouldCloseOnOverlayClick = {true}\r\n           >\r\n               {teste.map(obj =>(\r\n                   <EditCount ID = {obj.ID}  NomeCliente = {obj.Cliente} CpfCliente = {obj.CpfCliente} ValorCliente = {obj.Valor} DataEmissao = {obj.DataEmissao} DataVencimento = {obj.DataVencimento}\r\n                   Historico = {obj.Historico} />\r\n               ))}\r\n              \r\n           </Modal>\r\n    \r\n    )\r\n    \r\n}\r\n\r\nexport default MyModal;\r\n\r\n\r\n","C:\\Users\\Matheus\\Desktop\\erp\\src\\screens\\Routers.js",[],{"ruleId":"87","severity":1,"message":"88","line":2,"column":30,"nodeType":"89","messageId":"90","endLine":2,"endColumn":39},{"ruleId":"87","severity":1,"message":"91","line":2,"column":41,"nodeType":"89","messageId":"90","endLine":2,"endColumn":47},{"ruleId":"87","severity":1,"message":"92","line":2,"column":49,"nodeType":"89","messageId":"90","endLine":2,"endColumn":54},{"ruleId":"87","severity":1,"message":"93","line":6,"column":22,"nodeType":"89","messageId":"90","endLine":6,"endColumn":34},{"ruleId":"87","severity":1,"message":"94","line":6,"column":36,"nodeType":"89","messageId":"90","endLine":6,"endColumn":45},{"ruleId":"87","severity":1,"message":"95","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":13},{"ruleId":"87","severity":1,"message":"96","line":20,"column":14,"nodeType":"89","messageId":"90","endLine":20,"endColumn":21},{"ruleId":"87","severity":1,"message":"97","line":30,"column":14,"nodeType":"89","messageId":"90","endLine":30,"endColumn":20},{"ruleId":"87","severity":1,"message":"98","line":38,"column":14,"nodeType":"89","messageId":"90","endLine":38,"endColumn":21},{"ruleId":"87","severity":1,"message":"99","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"100","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"101","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"102","line":10,"column":12,"nodeType":"89","messageId":"90","endLine":10,"endColumn":21},{"ruleId":"87","severity":1,"message":"103","line":10,"column":23,"nodeType":"89","messageId":"90","endLine":10,"endColumn":36},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"87","severity":1,"message":"108","line":8,"column":9,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"87","severity":1,"message":"109","line":16,"column":12,"nodeType":"89","messageId":"90","endLine":16,"endColumn":21},{"ruleId":"87","severity":1,"message":"110","line":22,"column":12,"nodeType":"89","messageId":"90","endLine":22,"endColumn":17},{"ruleId":"87","severity":1,"message":"111","line":44,"column":14,"nodeType":"89","messageId":"90","endLine":44,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":135,"column":129,"nodeType":"114","messageId":"115","endLine":135,"endColumn":150},{"ruleId":"112","severity":1,"message":"113","line":141,"column":134,"nodeType":"114","messageId":"115","endLine":141,"endColumn":158},{"ruleId":"87","severity":1,"message":"116","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":46},{"ruleId":"87","severity":1,"message":"117","line":1,"column":48,"nodeType":"89","messageId":"90","endLine":1,"endColumn":62},{"ruleId":"118","severity":1,"message":"119","line":44,"column":13,"nodeType":"120","messageId":"121","endLine":44,"endColumn":26,"fix":"122"},{"ruleId":"118","severity":1,"message":"123","line":45,"column":13,"nodeType":"120","messageId":"121","endLine":45,"endColumn":26,"fix":"124"},{"ruleId":"118","severity":1,"message":"123","line":48,"column":13,"nodeType":"120","messageId":"121","endLine":48,"endColumn":26,"fix":"125"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":13,"nodeType":"120","messageId":"121","endLine":49,"endColumn":26,"fix":"126"},{"ruleId":"87","severity":1,"message":"127","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":19},{"ruleId":"87","severity":1,"message":"128","line":3,"column":46,"nodeType":"89","messageId":"90","endLine":3,"endColumn":59},{"ruleId":"87","severity":1,"message":"129","line":13,"column":24,"nodeType":"89","messageId":"90","endLine":13,"endColumn":37},{"ruleId":"87","severity":1,"message":"109","line":14,"column":12,"nodeType":"89","messageId":"90","endLine":14,"endColumn":21},{"ruleId":"87","severity":1,"message":"130","line":14,"column":23,"nodeType":"89","messageId":"90","endLine":14,"endColumn":35},{"ruleId":"87","severity":1,"message":"110","line":24,"column":12,"nodeType":"89","messageId":"90","endLine":24,"endColumn":17},{"ruleId":"87","severity":1,"message":"131","line":24,"column":19,"nodeType":"89","messageId":"90","endLine":24,"endColumn":27},{"ruleId":"87","severity":1,"message":"132","line":25,"column":11,"nodeType":"89","messageId":"90","endLine":25,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":114,"column":129,"nodeType":"114","messageId":"115","endLine":114,"endColumn":150},{"ruleId":"112","severity":1,"message":"113","line":120,"column":134,"nodeType":"114","messageId":"115","endLine":120,"endColumn":158},{"ruleId":"87","severity":1,"message":"100","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"133","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":20},{"ruleId":"87","severity":1,"message":"134","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":19},{"ruleId":"87","severity":1,"message":"135","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":17},{"ruleId":"87","severity":1,"message":"136","line":11,"column":12,"nodeType":"89","messageId":"90","endLine":11,"endColumn":17},{"ruleId":"87","severity":1,"message":"137","line":11,"column":19,"nodeType":"89","messageId":"90","endLine":11,"endColumn":27},{"ruleId":"87","severity":1,"message":"138","line":12,"column":21,"nodeType":"89","messageId":"90","endLine":12,"endColumn":31},"no-unused-vars","'FormCheck' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","'selectCounts' is defined but never used.","'allCounts' is defined but never used.","'axios' is defined but never used.","'cSelect' is defined but never used.","'Editar' is defined but never used.","'Excluir' is defined but never used.","'te' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'DataFilto' is assigned a value but never used.","'setDataFiltro' is assigned a value but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'contaAdd' is defined but never used.","'TipoConta' is assigned a value but never used.","'Conta' is assigned a value but never used.","'SendConta' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'createEntityAdapter' is defined but never used.","'createSelector' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property contas.","MemberExpression","unexpectedWhitespace",{"range":"141","text":"142"},"Unexpected whitespace before property status.",{"range":"143","text":"142"},{"range":"144","text":"142"},{"range":"145","text":"142"},"'Container' is defined but never used.","'ButtonToolbar' is defined but never used.","'setCpfCliente' is assigned a value but never used.","'setTipoConta' is assigned a value but never used.","'setConta' is assigned a value but never used.","'contas' is assigned a value but never used.","'ModalTitle' is defined but never used.","'ListaContas' is defined but never used.","'FormText' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'setcontaID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1290,1292],".",[1327,1329],[1430,1432],[1469,1471]]